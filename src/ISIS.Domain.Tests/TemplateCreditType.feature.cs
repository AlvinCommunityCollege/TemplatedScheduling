// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.5.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace ISIS.Domain.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Template Credit Type")]
    public partial class TemplateCreditTypeFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "TemplateCreditType.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Template Credit Type", "As a scheduler\nI want to manage the credit types of templates", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cant set credit type on a non-CE course")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void CantSetCreditTypeOnANon_CECourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cant set credit type on a non-CE course", new string[] {
                        "domain"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I have created a course and template");
#line 8
 testRunner.When("I change the template\'s credit type to \"Contract Training Funded\"");
#line 9
 testRunner.Then("the aggregate state is invalid");
#line 10
 testRunner.And("the message is \"Your attempt to change the credit type failed because this is not" +
                    " a continuing education course.\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Contract Training Funded")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToContractTrainingFunded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Contract Training Funded", new string[] {
                        "domain"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("I have created a CE course and template");
#line 16
 testRunner.When("I change the template\'s credit type to \"Contract Training Funded\"");
#line 17
 testRunner.Then("the template\'s credit type is changed to \"Contract Training Funded\"");
#line 18
 testRunner.And("the template\'s course type is changed to \"Continuing Education WECM\"");
#line 19
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Grant Funded")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToGrantFunded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Grant Funded", new string[] {
                        "domain"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("I have created a CE course and template");
#line 24
 testRunner.When("I change the template\'s credit type to \"Grant Funded\"");
#line 25
 testRunner.Then("the template\'s credit type is changed to \"Grant Funded\"");
#line 26
 testRunner.And("the template\'s course type is changed to \"Continuing Education WECM\"");
#line 27
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Workforce Funded")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToWorkforceFunded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Workforce Funded", new string[] {
                        "domain"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("I have created a CE course and template");
#line 32
 testRunner.When("I change the template\'s credit type to \"Workforce Funded\"");
#line 33
 testRunner.Then("the template\'s credit type is changed to \"Workforce Funded\"");
#line 34
 testRunner.And("the template\'s course type is changed to \"Continuing Education WECM\"");
#line 35
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Contract Training Non-Funded")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToContractTrainingNon_Funded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Contract Training Non-Funded", new string[] {
                        "domain"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
 testRunner.Given("I have created a CE course and template");
#line 40
 testRunner.When("I change the template\'s credit type to \"Contract Training Non-Funded\"");
#line 41
 testRunner.Then("the template\'s credit type is changed to \"Contract Training Non-Funded\"");
#line 42
 testRunner.And("the template\'s course type is changed to \"Continuing Education\"");
#line 43
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Special Interests")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToSpecialInterests()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Special Interests", new string[] {
                        "domain"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given("I have created a CE course and template");
#line 48
 testRunner.When("I change the template\'s credit type to \"Special Interests\"");
#line 49
 testRunner.Then("the template\'s credit type is changed to \"Special Interests\"");
#line 50
 testRunner.And("the template\'s course type is changed to \"Continuing Education\"");
#line 51
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Grant Non-Funded")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToGrantNon_Funded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Grant Non-Funded", new string[] {
                        "domain"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
 testRunner.Given("I have created a CE course and template");
#line 56
 testRunner.When("I change the template\'s credit type to \"Grant Non-Funded\"");
#line 57
 testRunner.Then("the template\'s credit type is changed to \"Grant Non-Funded\"");
#line 58
 testRunner.And("the template\'s course type is changed to \"Continuing Education\"");
#line 59
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Set the credit type to Workforce Non-Funded")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void SetTheCreditTypeToWorkforceNon_Funded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Set the credit type to Workforce Non-Funded", new string[] {
                        "domain"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line 63
 testRunner.Given("I have created a CE course and template");
#line 64
 testRunner.When("I change the template\'s credit type to \"Workforce Non-Funded\"");
#line 65
 testRunner.Then("the template\'s credit type is changed to \"Workforce Non-Funded\"");
#line 66
 testRunner.And("the template\'s course type is changed to \"Continuing Education\"");
#line 67
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change the credit type from one funded to another")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeTheCreditTypeFromOneFundedToAnother()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change the credit type from one funded to another", new string[] {
                        "domain"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
 testRunner.Given("I have created a CE course and template");
#line 72
 testRunner.And("I have changed the template\'s credit type to \"Workforce Funded\"");
#line 73
 testRunner.And("I have changed the template\'s course type to \"Continuing Education WECM\"");
#line 74
 testRunner.When("I change the template\'s credit type to \"Grant Funded\"");
#line 75
 testRunner.Then("the template\'s credit type is changed to \"Grant Funded\"");
#line 76
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change the credit type from one non-funded to another")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeTheCreditTypeFromOneNon_FundedToAnother()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change the credit type from one non-funded to another", new string[] {
                        "domain"});
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
 testRunner.Given("I have created a CE course and template");
#line 81
 testRunner.And("I have changed the template\'s credit type to \"Workforce Non-Funded\"");
#line 82
 testRunner.And("I have changed the template\'s course type to \"Continuing Education\"");
#line 83
 testRunner.When("I change the template\'s credit type to \"Grant Non-Funded\"");
#line 84
 testRunner.Then("the template\'s credit type is changed to \"Grant Non-Funded\"");
#line 85
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change the credit type from funded to non-funded")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeTheCreditTypeFromFundedToNon_Funded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change the credit type from funded to non-funded", new string[] {
                        "domain"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
 testRunner.Given("I have created a CE course and template");
#line 90
 testRunner.And("I have changed the template\'s credit type to \"Workforce Funded\"");
#line 91
 testRunner.And("I have changed the template\'s course type to \"Continuing Education WECM\"");
#line 92
 testRunner.When("I change the template\'s credit type to \"Workforce Non-Funded\"");
#line 93
 testRunner.Then("the template\'s credit type is changed to \"Workforce Non-Funded\"");
#line 94
 testRunner.And("the template\'s course type is changed to \"Continuing Education\"");
#line 95
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change the credit type from non-funded to funded")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeTheCreditTypeFromNon_FundedToFunded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change the credit type from non-funded to funded", new string[] {
                        "domain"});
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
 testRunner.Given("I have created a CE course and template");
#line 100
 testRunner.And("I have changed the template\'s credit type to \"Workforce Non-Funded\"");
#line 101
 testRunner.And("I have changed the template\'s course type to \"Continuing Education\"");
#line 102
 testRunner.When("I change the template\'s credit type to \"Workforce Funded\"");
#line 103
 testRunner.Then("the template\'s credit type is changed to \"Workforce Funded\"");
#line 104
 testRunner.And("the template\'s course type is changed to \"Continuing Education WECM\"");
#line 105
 testRunner.And("it does nothing else");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change the credit type to the same")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void ChangeTheCreditTypeToTheSame()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change the credit type to the same", new string[] {
                        "domain"});
#line 108
this.ScenarioSetup(scenarioInfo);
#line 109
 testRunner.Given("I have created a CE course and template");
#line 110
 testRunner.And("I have changed the template\'s credit type to \"Workforce Non-Funded\"");
#line 111
 testRunner.And("I have changed the template\'s course type to \"Continuing Education\"");
#line 112
 testRunner.When("I change the template\'s credit type to \"Workforce Non-Funded\"");
#line 113
 testRunner.Then("it does nothing");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
