<script id="mapView" type="text/html">
    <div>
        {{tmpl(model) "#campusDropdown" }}
        <span id="buildingDropdownContainer">
            {{tmpl(model.Campuses[0]) "#buildingDropdown"}}
        </span>
        <span id="mapDropdownContainer">
            {{tmpl(model.Campuses[0].Buildings[0]) "#mapsDropdown"}}
        </span>
        <div id="map"></div>
    </div>
</script>
<script id="campusDropdown" type="text/html">
        <select id="campuses">
            {{each Campuses}}
                <option>${$value.Name}</option>
            {{/each}}
        </select>
</script>
<script id="buildingDropdown" type="text/html">
        <select id="buildings">
            {{each Buildings}}
                <option>${$value.Name}</option>
            {{/each}}
        </select>
</script>
<script id="mapsDropdown" type="text/html">
        <select id="maps">
            {{each BuildingMaps}}
                <option>${$value.Name}</option>
            {{/each}}
        </select>
</script>
<script id="errorDialogTemplate" type="text/html">
    <p>
        <span class='ui-icon ui-icon-alert' style='float:left; margin:0 7px 50px 0;'></span>
        Sorry. We had trouble loading data for this map.
    </p>
</script>
@*<script type="text/javascript" src="@Url.Content("~/Content/images/buildings/G1.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/svgMap.js")"></script>*@
<script type="text/javascript">

    var svg = null;
    var selectedMap = null;
    var roomData = null;
    var roomAvailabilityData = null;

    afterBind.push(function () {
        rebind();
        mapChanged();
    });

    function rebind() {
        $("#campuses").unbind('change').change(campusChanged);
        $("#buildings").unbind('change').change(buildingChanged);
        $("#maps").unbind('change').change(mapChanged);
    }

    function campusChanged() {
        var campus = getSelectedCampus();
        var content = $('#buildingDropdown').tmpl(campus);
        $("#buildingDropdownContainer").empty().append(content);
        rebind();
        buildingChanged();
    }

    function buildingChanged() {
        var building = getSelectedBuilding();
        var content = $('#mapsDropdown').tmpl(building);
        $("#mapDropdownContainer").empty().append(content);
        rebind();
        mapChanged();
    }

    function mapChanged() {
        selectedMap = getSelectedMap();
        roomData = null;
        roomAvailabilityData = null;
        svg = null;

        // Additional deferred.reject() calls are ignored, so
        // we can use this trick to only display the dialog once
        // even for multiple failures.
        var showDialogDeferred = $.Deferred();
        showDialogDeferred.fail(function() {
            console.log('Showing error dialog');
            var dialogContent = $("#errorDialogTemplate").tmpl(null);
            $("<div />")
                                                    .attr('title', 'Error loading map data.')
                                                    .append(dialogContent)
                                                    .dialog({
                                                    modal: true,
                                                    resizable: false,
                                                    close: function() { $(this).remove(); }
                                                });
        });

        var d1 = changeMap();
        var d2 = loadRoomData();
        var d3 = loadRoomAvailability();

        d1.done(function() { console.log('Loading the svg completed.'); })
                                        .fail(function () { console.log('Loading the svg failed.'); });

        d2.done(function() { console.log('Loading room data completed.'); })
                .fail(function () { console.log('Loading the room data failed.'); });

        d3.done(function() { console.log('Loading room availability data completed.'); })
                        .fail(function() { console.log('Loading the room availability data failed.'); });
        

        $.when(d1, d2, d3)
                        .done(function(newSvg, newRoomData, newRoomAvailData) {
                    roomData = newRoomData;
                    roomAvailabilityData = newRoomAvailData;
                    svg = newSvg;
                    showDialogDeferred.resolve();
                })
                        .fail(function(deferred) {
                    console.log('Fail!');
                    console.log(deferred);
                    showDialogDeferred.reject();
                });
        console.log('Callbacks started!');
    }

    function getSelectedCampus() {
        for (var campusIdx in model.Campuses) {
            var campus = model.Campuses[campusIdx];
            if (campus.Name == $("#campuses").val())
                return campus;
        }
        return null;
    }

    function getSelectedBuilding() {
        var campus = getSelectedCampus();
        if (campus)
            for (var buildingIdx in campus.Buildings) {
                var building = campus.Buildings[buildingIdx];
                if (building.Name == $("#buildings").val())
                    return building;
            }
        return null;
    }

    function getSelectedMap() {
        var building = getSelectedBuilding();
        if (building)
            for (var mapIdx in building.BuildingMaps) {
                var map = building.BuildingMaps[mapIdx];
                if (map.Name == $("#maps").val())
                    return map;
            }
        return null;
    }

    function changeMap() {
        var dfd = $.Deferred();
        $('#map').svg('destroy');
        $('#map').svg({
            loadURL: selectedMap.MapImageUrl,
            onLoad: function (svg) {
                dfd.resolve(svg);
            }
        });
        return dfd.promise();
    }

    function loadRoomData() {
        return $.getJSON(selectedMap.MapRoomDataUrl);
    }

    function loadRoomAvailability() {
        return $.getJSON(selectedMap.AvailabilityUrl);
    }  
   
</script>
